
pipeline {
     agent any

      tools{
	     jdk  'jdk17'
	     maven 'maven3'
	    }

  	environment {
    	  IMAGE_NAME='jprakash1/todoapp-frontend'
    	  CONTAINER_NAME = 'todofrontend-container'
    	  GITHUB_CRED = credentials('github-cred')
    	  DOCKERHUB_CRED_ = credentials('docker-hub-cred')
	  SCANNER_HOME= tool 'sonarqube'
  	    }

  	parameters {
        string(
            name: 'BASE_VERSION',
            defaultValue: '1.0',
            description: 'Enter the base version for the Docker image'
        )
    }


    stages {         
        stage('Checkout Git') {
            steps {
       	       script {
                    checkout scmGit(branches: [[name: '*/dev-branch1']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-cred', url: 'https://github.com/techprakashtp/ThreeTierApp-Deployment.git']])
                        
          	     }
            	}
       	    }  	

        
        stage('Build Image') {         
            steps{  
                script {  
                    dir('ToDo-Frontend-App') {         
                    def fullVersion = "${params.BASE_VERSION}.${env.BUILD_NUMBER}"
                    sh "docker build -t ${IMAGE_NAME}:${fullVersion} ."   
                    echo 'Build Image Completed'   
		            }
                }
            }
        }
		
        stage('Push Image') {
            steps {
                script {
               	    withDockerRegistry(credentialsId: 'docker-hub-cred', toolName: 'Docker') {
                    def fullVersion = "${params.BASE_VERSION}.${env.BUILD_NUMBER}"
                    docker.image("${IMAGE_NAME}:${fullVersion}").push()
                    echo 'Push Docker Image to Docker Hub Completed'
                    }
                }
            }
    	}

        stage('UpdateManifest') {
		  environment {
                  GIT_REPO_NAME = "ThreeTierApp-Deployment.git"
                  GIT_USER_NAME = "techprakashtp"
                  
           	    }
            steps {
       	        script {
                      checkout scmGit(branches: [[name: '*/ops-branch1']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-cred', url: 'https://github.com/techprakashtp/ThreeTierApp-Deployment.git']])
		    def fullVersion = "${params.BASE_VERSION}.${env.BUILD_NUMBER}"
                    dir('K8S-Manifest/Frontend') {
                        withCredentials([gitUsernamePassword(credentialsId: 'github-cred', gitToolName: 'Git')]) { 	
			
                sh '''
                    git config user.name "techprakashtp"
		    git config user.email "jyotiprakashnk49@gmail.com"  
		    
		    git config clean.requireForce false
		    git clean -f

		    sed -i 's|{{BASE_VERSION}}|${params.BASE_VERSION}|g' deployment.yaml"
                    
		    cat deployment.yaml 
		    git add -A
		    
                    git commit -m "Update k8s deployment manifest file Image to version \${fullVersion}"
                    git push https://${GITHUB_CRED}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:ops-branch1

        	     ''' 
                        }
                    }
                }
            }
        } 

        stage('Running Image') {
            steps {
              sh "docker run -d --name ${CONTAINER_NAME} ${IMAGE_NAME}:${IMAGE_TAG}"
            }         
        }
        
        stage('Stop Container') {
            steps {
               sh "docker stop ${CONTAINER_NAME}"
            }           
        }    	
    }
}
