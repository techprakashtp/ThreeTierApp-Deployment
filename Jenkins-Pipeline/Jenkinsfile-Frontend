pipeline {
     agent any

      tools{
	     jdk  'jdk17'
	     maven 'maven3'
	   }

  	environment {
    	  Repo_Name='jprakash1/todoapp-frontend'
    	  Container_Name = 'my-container-frontend'
    	  IMAGE_TAG='v2.0'
    	  GITHUB_TOKEN = credentials('github_token')
    	  DOCKERHUB_TOKEN = credentials('docker-hub-cred')
	  SCANNER_HOME= tool 'sonarqube'
  	 }
  
 stages {         
    stage('Checkout Git') {
        steps {
       	    script {
             checkout scmGit(branches: [[name: '*/dev-branch1']], extensions: [], userRemoteConfigs: [[credentialsId: 'github_token', url: 'https://github.com/techprakashtp/ThreeTierApp-Deployment.git']])
                    withCredentials([gitUsernamePassword(credentialsId: 'github_token', gitToolName: 'Git')]) { 
                      sh '''
                    	   git config --global user.name "techprakashtp"
			   git config --global user.email "jyotiprakashnk49@gmail.com"  
        		 ''' 
                        }
          	    }
            	}
       	    }  	

     stage('SonarQube Analysis') {
            steps {
            	dir('ToDo-Frontend-App') {
			
                    withSonarQubeEnv('sonarqube') {

                        sh ''' 
       			  $SCANNER_HOME/bin/sonar-scanner \
 			  -Dsonar.projectKey=ThreeTierApp-Deployment \
 			  -Dsonar.projectName=ThreeTierApp-Deployment \
			   -Dsonar.sources=src\
			   -Dsonar.testExecutionReportPaths=test-report.xml\
			   -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
  			'''
		    }
                }
            }
        }

    stage('Build Image') {         
             steps{  
                 script {  
                     dir('ToDo-Frontend-App') {
                        docker.build "${Repo_Name}:${BUILD_NUMBER}"
                        echo 'Build Image Completed'   
		   }
                }
            }
        }
		
        stage('Push to DockerHub') {
            steps {
                script {
               	    withDockerRegistry(credentialsId: 'docker-hub-cred', toolName: 'Docker') {
                        docker.image("${Repo_Name}:${BUILD_NUMBER}").push()
                        echo 'Push Docker Image to Docker Hub Completed'
                    }
                }
            }
    	}

        stage('Running Image') {
            steps {
              sh "docker run -d --name ${Container_Name} ${Repo_Name}:${BUILD_NUMBER}"
            }         
        }
        
        stage('Stop Container') {
            steps {
               sh "docker stop ${Container_Name}"
            }           
        }    	
    }
}
