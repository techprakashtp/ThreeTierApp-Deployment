

pipeline {
  
  environment {
    Repo_Name='jprakash1/todoapp-frontend'
    Container_Name = 'my-container'
    IMAGE_TAG='v2.0'
    GITHUB_TOKEN = credentials('github_token')
    DOCKERHUB_TOKEN = credentials('docker-hub-cred')
  }
  
  agent any
  
  stages {         
    stage('Checkout SCM') {
       steps {
          checkout scmGit(branches: [[name: '*/dev-branch1']], extensions: [], userRemoteConfigs: [[credentialsId: 'github_token', url: 'https://github.com/techprakashtp/ThreeTierApp-Deployment.git']])
            }
        }
  
    stage('Build Image') {         
       steps{  
         script {  
         dir('ToDo-Frontend-App') {
        docker.build "${Repo_Name}:${BUILD_NUMBER}"
        echo 'Build Image Completed'   
           }
         }
      }       
   }
    
    stage('Running Image') {
       steps {
         sh "docker run -d --name ${Container_Name} ${Repo_Name}:${BUILD_NUMBER}"
       }         
    }
        
    stage('Stop Container') {
       steps {
         sh "docker stop ${Container_Name}"
         sh "docker rm ${Container_Name}"
       }           
    }
    
      stage('Push to DockerHub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-hub-cred', toolName: 'Docker') {
                        docker.image("${Repo_Name}:${BUILD_NUMBER}").push()
                        echo 'Push Docker Image to Docker Hub Completed'
                    }
                }
            }
    	}

    	 stage('GitHubCred') {
            steps {
                script {
                 
                    withCredentials([gitUsernamePassword(credentialsId: 'github_token', gitToolName: 'Git')]) {
                    
                    sh '''
                    	git config --global user.name "techprakashtp"
						git config --global user.email "jyotiprakashnk49@gmail.com"         
                        
                        
                       ''' 
                      
                        }
                    }
                }
            }
    	
    }
 } 
